{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineComponent, h, inject, computed, resolveComponent, openBlock, createBlock, createCommentVNode, withModifiers, withCtx, createVNode, Fragment, getCurrentInstance, ref, renderList, toDisplayString, provide, reactive, watch, onBeforeUpdate, onMounted, nextTick } from 'vue';\nimport ElScrollbar from '../el-scrollbar';\nimport ElCheckbox from '../el-checkbox';\nimport ElRadio from '../el-radio';\nimport { useLocaleInject } from '../hooks';\nimport { generateId, isEmpty, isUndefined, capitalize, deduplicate, arrayFlat, coerceTruthyValueToArray } from '../utils/util';\nimport isEqual from 'lodash/isEqual';\nimport { EVENT_CODE } from '../utils/aria';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../utils/constants';\nimport isServer from '../utils/isServer';\nimport scrollIntoView from '../utils/scroll-into-view';\nvar ExpandTrigger;\n(function (ExpandTrigger2) {\n  ExpandTrigger2[\"CLICK\"] = \"click\";\n  ExpandTrigger2[\"HOVER\"] = \"hover\";\n})(ExpandTrigger || (ExpandTrigger = {}));\nconst CASCADER_PANEL_INJECTION_KEY = Symbol();\nvar script = defineComponent({\n  name: \"ElCascaderNode\",\n  components: {\n    ElCheckbox,\n    ElRadio,\n    NodeContent: {\n      render() {\n        const {\n          node,\n          panel\n        } = this.$parent;\n        const {\n          data,\n          label\n        } = node;\n        const {\n          renderLabelFn\n        } = panel;\n        return h(\"span\", {\n          class: \"el-cascader-node__label\"\n        }, renderLabelFn ? renderLabelFn({\n          node,\n          data\n        }) : label);\n      }\n    }\n  },\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    menuId: String\n  },\n  emits: [\"expand\"],\n  setup(props, {\n    emit\n  }) {\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const isHoverMenu = computed(() => panel.isHoverMenu);\n    const multiple = computed(() => panel.config.multiple);\n    const checkStrictly = computed(() => panel.config.checkStrictly);\n    const checkedNodeId = computed(() => {\n      var _a;\n      return (_a = panel.checkedNodes[0]) == null ? void 0 : _a.uid;\n    });\n    const isDisabled = computed(() => props.node.isDisabled);\n    const isLeaf = computed(() => props.node.isLeaf);\n    const expandable = computed(() => checkStrictly.value && !isLeaf.value || !isDisabled.value);\n    const inExpandingPath = computed(() => isInPath(panel.expandingNode));\n    const inCheckedPath = computed(() => checkStrictly.value && panel.checkedNodes.some(isInPath));\n    const isInPath = node => {\n      var _a;\n      const {\n        level,\n        uid\n      } = props.node;\n      return ((_a = node == null ? void 0 : node.pathNodes[level - 1]) == null ? void 0 : _a.uid) === uid;\n    };\n    const doExpand = () => {\n      if (inExpandingPath.value) return;\n      panel.expandNode(props.node);\n    };\n    const doCheck = checked => {\n      const {\n        node\n      } = props;\n      if (checked === node.checked) return;\n      panel.handleCheckChange(node, checked);\n    };\n    const doLoad = () => {\n      panel.lazyLoad(props.node, () => {\n        if (!isLeaf.value) doExpand();\n      });\n    };\n    const handleHoverExpand = e => {\n      if (!isHoverMenu.value) return;\n      handleExpand();\n      !isLeaf.value && emit(\"expand\", e);\n    };\n    const handleExpand = () => {\n      const {\n        node\n      } = props;\n      if (!expandable.value || node.loading) return;\n      node.loaded ? doExpand() : doLoad();\n    };\n    const handleClick = () => {\n      if (isHoverMenu.value && !isLeaf.value) return;\n      if (isLeaf.value && !isDisabled.value && !checkStrictly.value && !multiple.value) {\n        handleCheck(true);\n      } else {\n        handleExpand();\n      }\n    };\n    const handleCheck = checked => {\n      if (!props.node.loaded) {\n        doLoad();\n      } else {\n        doCheck(checked);\n        !checkStrictly.value && doExpand();\n      }\n    };\n    return {\n      panel,\n      isHoverMenu,\n      multiple,\n      checkStrictly,\n      checkedNodeId,\n      isDisabled,\n      isLeaf,\n      expandable,\n      inExpandingPath,\n      inCheckedPath,\n      handleHoverExpand,\n      handleExpand,\n      handleClick,\n      handleCheck\n    };\n  }\n});\nconst _hoisted_1 = /* @__PURE__ */createVNode(\"span\", null, null, -1);\nconst _hoisted_2 = {\n  key: 2,\n  class: \"el-icon-check el-cascader-node__prefix\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"el-icon-loading el-cascader-node__postfix\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"el-icon-arrow-right el-cascader-node__postfix\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_el_radio = resolveComponent(\"el-radio\");\n  const _component_node_content = resolveComponent(\"node-content\");\n  return openBlock(), createBlock(\"li\", {\n    id: `${_ctx.menuId}-${_ctx.node.uid}`,\n    role: \"menuitem\",\n    \"aria-haspopup\": !_ctx.isLeaf,\n    \"aria-owns\": _ctx.isLeaf ? null : _ctx.menuId,\n    \"aria-expanded\": _ctx.inExpandingPath,\n    tabindex: _ctx.expandable ? -1 : null,\n    class: [\"el-cascader-node\", _ctx.checkStrictly && \"is-selectable\", _ctx.inExpandingPath && \"in-active-path\", _ctx.inCheckedPath && \"in-checked-path\", _ctx.node.checked && \"is-active\", !_ctx.expandable && \"is-disabled\"],\n    onMouseenter: _cache[3] || (_cache[3] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onFocus: _cache[4] || (_cache[4] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [createCommentVNode(\" prefix \"), _ctx.multiple ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 0,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: _ctx.isDisabled,\n    onClick: _cache[1] || (_cache[1] = withModifiers(() => {}, [\"stop\"])),\n    \"onUpdate:modelValue\": _ctx.handleCheck\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.checkStrictly ? (openBlock(), createBlock(_component_el_radio, {\n    key: 1,\n    \"model-value\": _ctx.checkedNodeId,\n    label: _ctx.node.uid,\n    disabled: _ctx.isDisabled,\n    \"onUpdate:modelValue\": _ctx.handleCheck,\n    onClick: _cache[2] || (_cache[2] = withModifiers(() => {}, [\"stop\"]))\n  }, {\n    default: withCtx(() => [createCommentVNode(\"\\n        Add an empty element to avoid render label,\\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\\n      \"), _hoisted_1]),\n    _: 1\n  }, 8, [\"model-value\", \"label\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.isLeaf && _ctx.node.checked ? (openBlock(), createBlock(\"i\", _hoisted_2)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" content \"), createVNode(_component_node_content), createCommentVNode(\" postfix \"), !_ctx.isLeaf ? (openBlock(), createBlock(Fragment, {\n    key: 3\n  }, [_ctx.node.loading ? (openBlock(), createBlock(\"i\", _hoisted_3)) : (openBlock(), createBlock(\"i\", _hoisted_4))], 2112)) : createCommentVNode(\"v-if\", true)], 42, [\"id\", \"aria-haspopup\", \"aria-owns\", \"aria-expanded\", \"tabindex\"]);\n}\nscript.render = render;\nscript.__file = \"packages/cascader-panel/src/node.vue\";\nvar script$1 = defineComponent({\n  name: \"ElCascaderMenu\",\n  components: {\n    ElScrollbar,\n    ElCascaderNode: script\n  },\n  props: {\n    nodes: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const instance = getCurrentInstance();\n    const {\n      t\n    } = useLocaleInject();\n    const id = generateId();\n    let activeNode = null;\n    let hoverTimer = null;\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const hoverZone = ref(null);\n    const isEmpty = computed(() => !props.nodes.length);\n    const menuId = computed(() => `cascader-menu-${id}-${props.index}`);\n    const handleExpand = e => {\n      activeNode = e.target;\n    };\n    const handleMouseMove = e => {\n      if (!panel.isHoverMenu || !activeNode || !hoverZone.value) return;\n      if (activeNode.contains(e.target)) {\n        clearHoverTimer();\n        const el = instance.vnode.el;\n        const {\n          left\n        } = el.getBoundingClientRect();\n        const {\n          offsetWidth,\n          offsetHeight\n        } = el;\n        const startX = e.clientX - left;\n        const top = activeNode.offsetTop;\n        const bottom = top + activeNode.offsetHeight;\n        hoverZone.value.innerHTML = `\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${top} L${offsetWidth} 0 V${top} Z\" />\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${bottom} L${offsetWidth} ${offsetHeight} V${bottom} Z\" />\n        `;\n      } else if (!hoverTimer) {\n        hoverTimer = window.setTimeout(clearHoverZone, panel.config.hoverThreshold);\n      }\n    };\n    const clearHoverTimer = () => {\n      if (!hoverTimer) return;\n      clearTimeout(hoverTimer);\n      hoverTimer = null;\n    };\n    const clearHoverZone = () => {\n      if (!hoverZone.value) return;\n      hoverZone.value.innerHTML = \"\";\n      clearHoverTimer();\n    };\n    return {\n      panel,\n      hoverZone,\n      isEmpty,\n      menuId,\n      t,\n      handleExpand,\n      handleMouseMove,\n      clearHoverZone\n    };\n  }\n});\nconst _hoisted_1$1 = {\n  key: 0,\n  class: \"el-cascader-menu__empty-text\"\n};\nconst _hoisted_2$1 = {\n  key: 1,\n  ref: \"hoverZone\",\n  class: \"el-cascader-menu__hover-zone\"\n};\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_node = resolveComponent(\"el-cascader-node\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  return openBlock(), createBlock(_component_el_scrollbar, {\n    id: _ctx.menuId,\n    tag: \"ul\",\n    role: \"menu\",\n    class: \"el-cascader-menu\",\n    \"wrap-class\": \"el-cascader-menu__wrap\",\n    \"view-class\": [\"el-cascader-menu__list\", _ctx.isEmpty && \"is-empty\"],\n    onMousemove: _ctx.handleMouseMove,\n    onMouseleave: _ctx.clearHoverZone\n  }, {\n    default: withCtx(() => [(openBlock(true), createBlock(Fragment, null, renderList(_ctx.nodes, node => {\n      return openBlock(), createBlock(_component_el_cascader_node, {\n        key: node.uid,\n        node,\n        \"menu-id\": _ctx.menuId,\n        onExpand: _ctx.handleExpand\n      }, null, 8, [\"node\", \"menu-id\", \"onExpand\"]);\n    }), 128)), _ctx.isEmpty ? (openBlock(), createBlock(\"div\", _hoisted_1$1, toDisplayString(_ctx.t(\"el.cascader.noData\")), 1)) : _ctx.panel.isHoverMenu ? (openBlock(), createBlock(\"svg\", _hoisted_2$1, null, 512)) : createCommentVNode(\"v-if\", true)]),\n    _: 1\n  }, 8, [\"id\", \"view-class\", \"onMousemove\", \"onMouseleave\"]);\n}\nscript$1.render = render$1;\nscript$1.__file = \"packages/cascader-panel/src/menu.vue\";\n\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\nconst EMPTY_OBJ = process.env.NODE_ENV !== 'production' ? Object.freeze({}) : {};\nconst EMPTY_ARR = process.env.NODE_ENV !== 'production' ? Object.freeze([]) : [];\nconst NOOP = () => {};\nconst isFunction = val => typeof val === 'function';\nlet uid = 0;\nconst calculatePathNodes = node => {\n  const nodes = [node];\n  let {\n    parent\n  } = node;\n  while (parent) {\n    nodes.unshift(parent);\n    parent = parent.parent;\n  }\n  return nodes;\n};\nclass Node {\n  constructor(data, config, parent, root = false) {\n    this.data = data;\n    this.config = config;\n    this.parent = parent;\n    this.root = root;\n    this.uid = uid++;\n    this.checked = false;\n    this.indeterminate = false;\n    this.loading = false;\n    const {\n      value: valueKey,\n      label: labelKey,\n      children: childrenKey\n    } = config;\n    const childrenData = data[childrenKey];\n    const pathNodes = calculatePathNodes(this);\n    this.level = root ? 0 : parent ? parent.level + 1 : 1;\n    this.value = data[valueKey];\n    this.label = data[labelKey];\n    this.pathNodes = pathNodes;\n    this.pathValues = pathNodes.map(node => node.value);\n    this.pathLabels = pathNodes.map(node => node.label);\n    this.childrenData = childrenData;\n    this.children = (childrenData || []).map(child => new Node(child, config, this));\n    this.loaded = !config.lazy || this.isLeaf || !isEmpty(childrenData);\n  }\n  get isDisabled() {\n    const {\n      data,\n      parent,\n      config\n    } = this;\n    const {\n      disabled,\n      checkStrictly\n    } = config;\n    const isDisabled = isFunction(disabled) ? disabled(data, this) : !!data[disabled];\n    return isDisabled || !checkStrictly && (parent == null ? void 0 : parent.isDisabled);\n  }\n  get isLeaf() {\n    const {\n      data,\n      config,\n      childrenData,\n      loaded\n    } = this;\n    const {\n      lazy,\n      leaf\n    } = config;\n    const isLeaf = isFunction(leaf) ? leaf(data, this) : data[leaf];\n    return isUndefined(isLeaf) ? lazy && !loaded ? false : !Array.isArray(childrenData) : !!isLeaf;\n  }\n  get valueByOption() {\n    return this.config.emitPath ? this.pathValues : this.value;\n  }\n  appendChild(childData) {\n    const {\n      childrenData,\n      children\n    } = this;\n    const node = new Node(childData, this.config, this);\n    if (Array.isArray(childrenData)) {\n      childrenData.push(childData);\n    } else {\n      this.childrenData = [childData];\n    }\n    children.push(node);\n    return node;\n  }\n  calcText(allLevels, separator) {\n    const text = allLevels ? this.pathLabels.join(separator) : this.label;\n    this.text = text;\n    return text;\n  }\n  broadcast(event, ...args) {\n    const handlerName = `onParent${capitalize(event)}`;\n    this.children.forEach(child => {\n      if (child) {\n        child.broadcast(event, ...args);\n        child[handlerName] && child[handlerName](...args);\n      }\n    });\n  }\n  emit(event, ...args) {\n    const {\n      parent\n    } = this;\n    const handlerName = `onChild${capitalize(event)}`;\n    if (parent) {\n      parent[handlerName] && parent[handlerName](...args);\n      parent.emit(event, ...args);\n    }\n  }\n  onParentCheck(checked) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked);\n    }\n  }\n  onChildCheck() {\n    const {\n      children\n    } = this;\n    const validChildren = children.filter(child => !child.isDisabled);\n    const checked = validChildren.length ? validChildren.every(child => child.checked) : false;\n    this.setCheckState(checked);\n  }\n  setCheckState(checked) {\n    const totalNum = this.children.length;\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;\n      return c + num;\n    }, 0);\n    this.checked = this.loaded && this.children.every(child => child.loaded && child.checked) && checked;\n    this.indeterminate = this.loaded && checkedNum !== totalNum && checkedNum > 0;\n  }\n  doCheck(checked) {\n    if (this.checked === checked) return;\n    const {\n      checkStrictly,\n      multiple\n    } = this.config;\n    if (checkStrictly || !multiple) {\n      this.checked = checked;\n    } else {\n      this.broadcast(\"check\", checked);\n      this.setCheckState(checked);\n      this.emit(\"check\");\n    }\n  }\n}\nconst flatNodes = (nodes, leafOnly) => {\n  return nodes.reduce((res, node) => {\n    if (node.isLeaf) {\n      res.push(node);\n    } else {\n      !leafOnly && res.push(node);\n      res = res.concat(flatNodes(node.children, leafOnly));\n    }\n    return res;\n  }, []);\n};\nclass Store {\n  constructor(data, config) {\n    this.config = config;\n    const nodes = (data || []).map(nodeData => new Node(nodeData, this.config));\n    this.nodes = nodes;\n    this.allNodes = flatNodes(nodes, false);\n    this.leafNodes = flatNodes(nodes, true);\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  getFlattedNodes(leafOnly) {\n    return leafOnly ? this.leafNodes : this.allNodes;\n  }\n  appendNode(nodeData, parentNode) {\n    const node = parentNode ? parentNode.appendChild(nodeData) : new Node(nodeData, this.config);\n    if (!parentNode) this.nodes.push(node);\n    this.allNodes.push(node);\n    node.isLeaf && this.leafNodes.push(node);\n  }\n  appendNodes(nodeDataList, parentNode) {\n    nodeDataList.forEach(nodeData => this.appendNode(nodeData, parentNode));\n  }\n  getNodeByValue(value, leafOnly = false) {\n    if (!value && value !== 0) return null;\n    const nodes = this.getFlattedNodes(leafOnly).filter(node => isEqual(node.value, value) || isEqual(node.pathValues, value));\n    return nodes[0] || null;\n  }\n  getSameNode(node) {\n    if (!node) return null;\n    const nodes = this.getFlattedNodes(false).filter(({\n      value,\n      level\n    }) => isEqual(node.value, value) && node.level === level);\n    return nodes[0] || null;\n  }\n}\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nconst CommonProps = {\n  modelValue: [Number, String, Array],\n  options: {\n    type: Array,\n    default: () => []\n  },\n  props: {\n    type: Object,\n    default: () => ({})\n  }\n};\nconst DefaultProps = {\n  expandTrigger: ExpandTrigger.CLICK,\n  multiple: false,\n  checkStrictly: false,\n  emitPath: true,\n  lazy: false,\n  lazyLoad: NOOP,\n  value: \"value\",\n  label: \"label\",\n  children: \"children\",\n  leaf: \"leaf\",\n  disabled: \"disabled\",\n  hoverThreshold: 500\n};\nconst useCascaderConfig = props => {\n  return computed(() => __spreadValues(__spreadValues({}, DefaultProps), props.props));\n};\nconst isLeaf = el => !el.getAttribute(\"aria-owns\");\nconst getSibling = (el, distance) => {\n  const {\n    parentNode\n  } = el;\n  if (!parentNode) return null;\n  const siblings = parentNode.querySelectorAll('.el-cascader-node[tabindex=\"-1\"]');\n  const index = Array.prototype.indexOf.call(siblings, el);\n  return siblings[index + distance] || null;\n};\nconst getMenuIndex = el => {\n  if (!el) return 0;\n  const pieces = el.id.split(\"-\");\n  return Number(pieces[pieces.length - 2]);\n};\nconst focusNode = el => {\n  if (!el) return;\n  el.focus();\n  !isLeaf(el) && el.click();\n};\nconst checkNode = el => {\n  if (!el) return;\n  const input = el.querySelector(\"input\");\n  if (input) {\n    input.click();\n  } else if (isLeaf(el)) {\n    el.click();\n  }\n};\nconst sortByOriginalOrder = (oldNodes, newNodes) => {\n  const newNodesCopy = newNodes.slice(0);\n  const newIds = newNodesCopy.map(node => node.uid);\n  const res = oldNodes.reduce((acc, item) => {\n    const index = newIds.indexOf(item.uid);\n    if (index > -1) {\n      acc.push(item);\n      newNodesCopy.splice(index, 1);\n      newIds.splice(index, 1);\n    }\n    return acc;\n  }, []);\n  res.push(...newNodesCopy);\n  return res;\n};\nvar __defProp$1 = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1) for (var prop of __getOwnPropSymbols$1(b)) {\n    if (__propIsEnum$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar script$2 = defineComponent({\n  name: \"ElCascaderPanel\",\n  components: {\n    ElCascaderMenu: script$1\n  },\n  props: __spreadProps(__spreadValues$1({}, CommonProps), {\n    border: {\n      type: Boolean,\n      default: true\n    },\n    renderLabel: Function\n  }),\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"close\", \"expand-change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let initialLoaded = true;\n    let manualChecked = false;\n    const config = useCascaderConfig(props);\n    const store = ref(null);\n    const menuList = ref([]);\n    const checkedValue = ref(null);\n    const menus = ref([]);\n    const expandingNode = ref(null);\n    const checkedNodes = ref([]);\n    const isHoverMenu = computed(() => config.value.expandTrigger === ExpandTrigger.HOVER);\n    const renderLabelFn = computed(() => props.renderLabel || slots.default);\n    const initStore = () => {\n      const {\n        options\n      } = props;\n      const cfg = config.value;\n      manualChecked = false;\n      store.value = new Store(options, cfg);\n      menus.value = [store.value.getNodes()];\n      if (cfg.lazy && isEmpty(props.options)) {\n        initialLoaded = false;\n        lazyLoad(null, () => {\n          initialLoaded = true;\n          syncCheckedValue(false, true);\n        });\n      } else {\n        syncCheckedValue(false, true);\n      }\n    };\n    const lazyLoad = (node, cb) => {\n      const cfg = config.value;\n      node = node || new Node({}, cfg, null, true);\n      node.loading = true;\n      const resolve = dataList => {\n        const parent = node.root ? null : node;\n        dataList && store.value.appendNodes(dataList, parent);\n        node.loading = false;\n        node.loaded = true;\n        cb && cb(dataList);\n      };\n      cfg.lazyLoad(node, resolve);\n    };\n    const expandNode = (node, silent) => {\n      var _a;\n      const {\n        level\n      } = node;\n      const newMenus = menus.value.slice(0, level);\n      let newExpandingNode;\n      if (node.isLeaf) {\n        newExpandingNode = node.pathNodes[level - 2];\n      } else {\n        newExpandingNode = node;\n        newMenus.push(node.children);\n      }\n      if (((_a = expandingNode.value) == null ? void 0 : _a.uid) !== (newExpandingNode == null ? void 0 : newExpandingNode.uid)) {\n        expandingNode.value = node;\n        menus.value = newMenus;\n        !silent && emit(\"expand-change\", (node == null ? void 0 : node.pathValues) || []);\n      }\n    };\n    const handleCheckChange = (node, checked, emitClose = true) => {\n      const {\n        checkStrictly,\n        multiple\n      } = config.value;\n      const oldNode = checkedNodes.value[0];\n      manualChecked = true;\n      !multiple && (oldNode == null ? void 0 : oldNode.doCheck(false));\n      node.doCheck(checked);\n      calculateCheckedValue();\n      emitClose && !multiple && !checkStrictly && emit(\"close\");\n    };\n    const getFlattedNodes = leafOnly => {\n      return store.value.getFlattedNodes(leafOnly);\n    };\n    const getCheckedNodes = leafOnly => {\n      return getFlattedNodes(leafOnly).filter(node => node.checked !== false);\n    };\n    const clearCheckedNodes = () => {\n      checkedNodes.value.forEach(node => node.doCheck(false));\n      calculateCheckedValue();\n    };\n    const calculateCheckedValue = () => {\n      var _a;\n      const {\n        checkStrictly,\n        multiple\n      } = config.value;\n      const oldNodes = checkedNodes.value;\n      const newNodes = getCheckedNodes(!checkStrictly);\n      const nodes = sortByOriginalOrder(oldNodes, newNodes);\n      const values = nodes.map(node => node.valueByOption);\n      checkedNodes.value = nodes;\n      checkedValue.value = multiple ? values : (_a = values[0]) != null ? _a : null;\n    };\n    const syncCheckedValue = (loaded = false, forced = false) => {\n      const {\n        modelValue\n      } = props;\n      const {\n        lazy,\n        multiple,\n        checkStrictly\n      } = config.value;\n      const leafOnly = !checkStrictly;\n      if (!initialLoaded || manualChecked || !forced && isEqual(modelValue, checkedValue.value)) return;\n      if (lazy && !loaded) {\n        const values = deduplicate(arrayFlat(coerceTruthyValueToArray(modelValue)));\n        const nodes = values.map(val => store.value.getNodeByValue(val)).filter(node => !!node && !node.loaded && !node.loading);\n        if (nodes.length) {\n          nodes.forEach(node => {\n            lazyLoad(node, () => syncCheckedValue(false, forced));\n          });\n        } else {\n          syncCheckedValue(true, forced);\n        }\n      } else {\n        const values = multiple ? coerceTruthyValueToArray(modelValue) : [modelValue];\n        const nodes = deduplicate(values.map(val => store.value.getNodeByValue(val, leafOnly)));\n        syncMenuState(nodes, false);\n        checkedValue.value = modelValue;\n      }\n    };\n    const syncMenuState = (newCheckedNodes, reserveExpandingState = true) => {\n      const {\n        checkStrictly\n      } = config.value;\n      const oldNodes = checkedNodes.value;\n      const newNodes = newCheckedNodes.filter(node => !!node && (checkStrictly || node.isLeaf));\n      const oldExpandingNode = store.value.getSameNode(expandingNode.value);\n      const newExpandingNode = reserveExpandingState && oldExpandingNode || newNodes[0];\n      if (newExpandingNode) {\n        newExpandingNode.pathNodes.forEach(node => expandNode(node, true));\n      } else {\n        expandingNode.value = null;\n      }\n      oldNodes.forEach(node => node.doCheck(false));\n      newNodes.forEach(node => node.doCheck(true));\n      checkedNodes.value = newNodes;\n      nextTick(scrollToExpandingNode);\n    };\n    const scrollToExpandingNode = () => {\n      if (isServer) return;\n      menuList.value.forEach(menu => {\n        const menuElement = menu == null ? void 0 : menu.$el;\n        if (menuElement) {\n          const container = menuElement.querySelector(\".el-scrollbar__wrap\");\n          const activeNode = menuElement.querySelector(\".el-cascader-node.is-active\") || menuElement.querySelector(\".el-cascader-node.in-active-path\");\n          scrollIntoView(container, activeNode);\n        }\n      });\n    };\n    const handleKeyDown = e => {\n      const target = e.target;\n      const {\n        code\n      } = e;\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          const distance = code === EVENT_CODE.up ? -1 : 1;\n          focusNode(getSibling(target, distance));\n          break;\n        case EVENT_CODE.left:\n          const preMenu = menuList.value[getMenuIndex(target) - 1];\n          const expandedNode = preMenu == null ? void 0 : preMenu.$el.querySelector('.el-cascader-node[aria-expanded=\"true\"]');\n          focusNode(expandedNode);\n          break;\n        case EVENT_CODE.right:\n          const nextMenu = menuList.value[getMenuIndex(target) + 1];\n          const firstNode = nextMenu == null ? void 0 : nextMenu.$el.querySelector('.el-cascader-node[tabindex=\"-1\"]');\n          focusNode(firstNode);\n          break;\n        case EVENT_CODE.enter:\n          checkNode(target);\n          break;\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          emit(\"close\");\n          break;\n      }\n    };\n    provide(CASCADER_PANEL_INJECTION_KEY, reactive({\n      config,\n      expandingNode,\n      checkedNodes,\n      isHoverMenu,\n      renderLabelFn,\n      lazyLoad,\n      expandNode,\n      handleCheckChange\n    }));\n    watch([config, () => props.options], initStore, {\n      deep: true,\n      immediate: true\n    });\n    watch(() => props.modelValue, () => {\n      manualChecked = false;\n      syncCheckedValue();\n    });\n    watch(checkedValue, val => {\n      if (!isEqual(val, props.modelValue)) {\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n      }\n    });\n    onBeforeUpdate(() => menuList.value = []);\n    onMounted(() => !isEmpty(props.modelValue) && syncCheckedValue());\n    return {\n      menuList,\n      menus,\n      checkedNodes,\n      handleKeyDown,\n      handleCheckChange,\n      getFlattedNodes,\n      getCheckedNodes,\n      clearCheckedNodes,\n      calculateCheckedValue,\n      scrollToExpandingNode\n    };\n  }\n});\nfunction render$2(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_menu = resolveComponent(\"el-cascader-menu\");\n  return openBlock(), createBlock(\"div\", {\n    class: [\"el-cascader-panel\", _ctx.border && \"is-bordered\"],\n    onKeydown: _cache[1] || (_cache[1] = (...args) => _ctx.handleKeyDown && _ctx.handleKeyDown(...args))\n  }, [(openBlock(true), createBlock(Fragment, null, renderList(_ctx.menus, (menu, index) => {\n    return openBlock(), createBlock(_component_el_cascader_menu, {\n      key: index,\n      ref: item => _ctx.menuList[index] = item,\n      index,\n      nodes: menu\n    }, null, 8, [\"index\", \"nodes\"]);\n  }), 128))], 34);\n}\nscript$2.render = render$2;\nscript$2.__file = \"packages/cascader-panel/src/index.vue\";\nscript$2.install = app => {\n  app.component(script$2.name, script$2);\n};\nconst _CascaderPanel = script$2;\nexport default _CascaderPanel;\nexport { CASCADER_PANEL_INJECTION_KEY, CommonProps, DefaultProps, ExpandTrigger, useCascaderConfig };","map":{"version":3,"names":["defineComponent","h","inject","computed","resolveComponent","openBlock","createBlock","createCommentVNode","withModifiers","withCtx","createVNode","Fragment","getCurrentInstance","ref","renderList","toDisplayString","provide","reactive","watch","onBeforeUpdate","onMounted","nextTick","ElScrollbar","ElCheckbox","ElRadio","useLocaleInject","generateId","isEmpty","isUndefined","capitalize","deduplicate","arrayFlat","coerceTruthyValueToArray","isEqual","EVENT_CODE","UPDATE_MODEL_EVENT","CHANGE_EVENT","isServer","scrollIntoView","ExpandTrigger","ExpandTrigger2","CASCADER_PANEL_INJECTION_KEY","Symbol","script","name","components","NodeContent","render","node","panel","$parent","data","label","renderLabelFn","class","props","type","Object","required","menuId","String","emits","setup","emit","isHoverMenu","multiple","config","checkStrictly","checkedNodeId","_a","checkedNodes","uid","isDisabled","isLeaf","expandable","value","inExpandingPath","isInPath","expandingNode","inCheckedPath","some","level","pathNodes","doExpand","expandNode","doCheck","checked","handleCheckChange","doLoad","lazyLoad","handleHoverExpand","e","handleExpand","loading","loaded","handleClick","handleCheck","_hoisted_1","_hoisted_2","key","_hoisted_3","_hoisted_4","_ctx","_cache","$props","$setup","$data","$options","_component_el_checkbox","_component_el_radio","_component_node_content","id","role","tabindex","onMouseenter","args","onFocus","onClick","indeterminate","disabled","default","_","__file","script$1","ElCascaderNode","nodes","Array","index","Number","instance","t","activeNode","hoverTimer","hoverZone","length","target","handleMouseMove","contains","clearHoverTimer","el","vnode","left","getBoundingClientRect","offsetWidth","offsetHeight","startX","clientX","top","offsetTop","bottom","innerHTML","window","setTimeout","clearHoverZone","hoverThreshold","clearTimeout","_hoisted_1$1","_hoisted_2$1","render$1","_component_el_cascader_node","_component_el_scrollbar","tag","onMousemove","onMouseleave","onExpand","EMPTY_OBJ","process","env","NODE_ENV","freeze","EMPTY_ARR","NOOP","isFunction","val","calculatePathNodes","parent","unshift","Node","constructor","root","valueKey","labelKey","children","childrenKey","childrenData","pathValues","map","pathLabels","child","lazy","leaf","isArray","valueByOption","emitPath","appendChild","childData","push","calcText","allLevels","separator","text","join","broadcast","event","handlerName","forEach","onParentCheck","setCheckState","onChildCheck","validChildren","filter","every","totalNum","checkedNum","reduce","c","p","num","flatNodes","leafOnly","res","concat","Store","nodeData","allNodes","leafNodes","getNodes","getFlattedNodes","appendNode","parentNode","appendNodes","nodeDataList","getNodeByValue","getSameNode","__defProp","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","enumerable","configurable","writable","__spreadValues","a","b","prop","call","CommonProps","modelValue","options","DefaultProps","expandTrigger","CLICK","useCascaderConfig","getAttribute","getSibling","distance","siblings","querySelectorAll","indexOf","getMenuIndex","pieces","split","focusNode","focus","click","checkNode","input","querySelector","sortByOriginalOrder","oldNodes","newNodes","newNodesCopy","slice","newIds","acc","item","splice","__defProp$1","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols$1","__hasOwnProp$1","__propIsEnum$1","__defNormalProp$1","__spreadValues$1","__spreadProps","script$2","ElCascaderMenu","border","Boolean","renderLabel","Function","slots","initialLoaded","manualChecked","store","menuList","checkedValue","menus","HOVER","initStore","cfg","syncCheckedValue","cb","resolve","dataList","silent","newMenus","newExpandingNode","emitClose","oldNode","calculateCheckedValue","getCheckedNodes","clearCheckedNodes","values","forced","syncMenuState","newCheckedNodes","reserveExpandingState","oldExpandingNode","scrollToExpandingNode","menu","menuElement","$el","container","handleKeyDown","code","up","down","preMenu","expandedNode","right","nextMenu","firstNode","enter","esc","tab","deep","immediate","render$2","_component_el_cascader_menu","onKeydown","install","app","component","_CascaderPanel"],"sources":["/home/jisra/Documents/escom/web/tecweb_vue_frontend/node_modules/element-plus/es/el-cascader-panel/index.js"],"sourcesContent":["import { defineComponent, h, inject, computed, resolveComponent, openBlock, createBlock, createCommentVNode, withModifiers, withCtx, createVNode, Fragment, getCurrentInstance, ref, renderList, toDisplayString, provide, reactive, watch, onBeforeUpdate, onMounted, nextTick } from 'vue';\nimport ElScrollbar from '../el-scrollbar';\nimport ElCheckbox from '../el-checkbox';\nimport ElRadio from '../el-radio';\nimport { useLocaleInject } from '../hooks';\nimport { generateId, isEmpty, isUndefined, capitalize, deduplicate, arrayFlat, coerceTruthyValueToArray } from '../utils/util';\nimport isEqual from 'lodash/isEqual';\nimport { EVENT_CODE } from '../utils/aria';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../utils/constants';\nimport isServer from '../utils/isServer';\nimport scrollIntoView from '../utils/scroll-into-view';\n\nvar ExpandTrigger;\n(function(ExpandTrigger2) {\n  ExpandTrigger2[\"CLICK\"] = \"click\";\n  ExpandTrigger2[\"HOVER\"] = \"hover\";\n})(ExpandTrigger || (ExpandTrigger = {}));\nconst CASCADER_PANEL_INJECTION_KEY = Symbol();\n\nvar script = defineComponent({\n  name: \"ElCascaderNode\",\n  components: {\n    ElCheckbox,\n    ElRadio,\n    NodeContent: {\n      render() {\n        const { node, panel } = this.$parent;\n        const { data, label } = node;\n        const { renderLabelFn } = panel;\n        return h(\"span\", { class: \"el-cascader-node__label\" }, renderLabelFn ? renderLabelFn({ node, data }) : label);\n      }\n    }\n  },\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    menuId: String\n  },\n  emits: [\"expand\"],\n  setup(props, { emit }) {\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const isHoverMenu = computed(() => panel.isHoverMenu);\n    const multiple = computed(() => panel.config.multiple);\n    const checkStrictly = computed(() => panel.config.checkStrictly);\n    const checkedNodeId = computed(() => {\n      var _a;\n      return (_a = panel.checkedNodes[0]) == null ? void 0 : _a.uid;\n    });\n    const isDisabled = computed(() => props.node.isDisabled);\n    const isLeaf = computed(() => props.node.isLeaf);\n    const expandable = computed(() => checkStrictly.value && !isLeaf.value || !isDisabled.value);\n    const inExpandingPath = computed(() => isInPath(panel.expandingNode));\n    const inCheckedPath = computed(() => checkStrictly.value && panel.checkedNodes.some(isInPath));\n    const isInPath = (node) => {\n      var _a;\n      const { level, uid } = props.node;\n      return ((_a = node == null ? void 0 : node.pathNodes[level - 1]) == null ? void 0 : _a.uid) === uid;\n    };\n    const doExpand = () => {\n      if (inExpandingPath.value)\n        return;\n      panel.expandNode(props.node);\n    };\n    const doCheck = (checked) => {\n      const { node } = props;\n      if (checked === node.checked)\n        return;\n      panel.handleCheckChange(node, checked);\n    };\n    const doLoad = () => {\n      panel.lazyLoad(props.node, () => {\n        if (!isLeaf.value)\n          doExpand();\n      });\n    };\n    const handleHoverExpand = (e) => {\n      if (!isHoverMenu.value)\n        return;\n      handleExpand();\n      !isLeaf.value && emit(\"expand\", e);\n    };\n    const handleExpand = () => {\n      const { node } = props;\n      if (!expandable.value || node.loading)\n        return;\n      node.loaded ? doExpand() : doLoad();\n    };\n    const handleClick = () => {\n      if (isHoverMenu.value && !isLeaf.value)\n        return;\n      if (isLeaf.value && !isDisabled.value && !checkStrictly.value && !multiple.value) {\n        handleCheck(true);\n      } else {\n        handleExpand();\n      }\n    };\n    const handleCheck = (checked) => {\n      if (!props.node.loaded) {\n        doLoad();\n      } else {\n        doCheck(checked);\n        !checkStrictly.value && doExpand();\n      }\n    };\n    return {\n      panel,\n      isHoverMenu,\n      multiple,\n      checkStrictly,\n      checkedNodeId,\n      isDisabled,\n      isLeaf,\n      expandable,\n      inExpandingPath,\n      inCheckedPath,\n      handleHoverExpand,\n      handleExpand,\n      handleClick,\n      handleCheck\n    };\n  }\n});\n\nconst _hoisted_1 = /* @__PURE__ */ createVNode(\"span\", null, null, -1);\nconst _hoisted_2 = {\n  key: 2,\n  class: \"el-icon-check el-cascader-node__prefix\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"el-icon-loading el-cascader-node__postfix\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"el-icon-arrow-right el-cascader-node__postfix\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_el_radio = resolveComponent(\"el-radio\");\n  const _component_node_content = resolveComponent(\"node-content\");\n  return openBlock(), createBlock(\"li\", {\n    id: `${_ctx.menuId}-${_ctx.node.uid}`,\n    role: \"menuitem\",\n    \"aria-haspopup\": !_ctx.isLeaf,\n    \"aria-owns\": _ctx.isLeaf ? null : _ctx.menuId,\n    \"aria-expanded\": _ctx.inExpandingPath,\n    tabindex: _ctx.expandable ? -1 : null,\n    class: [\n      \"el-cascader-node\",\n      _ctx.checkStrictly && \"is-selectable\",\n      _ctx.inExpandingPath && \"in-active-path\",\n      _ctx.inCheckedPath && \"in-checked-path\",\n      _ctx.node.checked && \"is-active\",\n      !_ctx.expandable && \"is-disabled\"\n    ],\n    onMouseenter: _cache[3] || (_cache[3] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onFocus: _cache[4] || (_cache[4] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [\n    createCommentVNode(\" prefix \"),\n    _ctx.multiple ? (openBlock(), createBlock(_component_el_checkbox, {\n      key: 0,\n      \"model-value\": _ctx.node.checked,\n      indeterminate: _ctx.node.indeterminate,\n      disabled: _ctx.isDisabled,\n      onClick: _cache[1] || (_cache[1] = withModifiers(() => {\n      }, [\"stop\"])),\n      \"onUpdate:modelValue\": _ctx.handleCheck\n    }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.checkStrictly ? (openBlock(), createBlock(_component_el_radio, {\n      key: 1,\n      \"model-value\": _ctx.checkedNodeId,\n      label: _ctx.node.uid,\n      disabled: _ctx.isDisabled,\n      \"onUpdate:modelValue\": _ctx.handleCheck,\n      onClick: _cache[2] || (_cache[2] = withModifiers(() => {\n      }, [\"stop\"]))\n    }, {\n      default: withCtx(() => [\n        createCommentVNode(\"\\n        Add an empty element to avoid render label,\\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\\n      \"),\n        _hoisted_1\n      ]),\n      _: 1\n    }, 8, [\"model-value\", \"label\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.isLeaf && _ctx.node.checked ? (openBlock(), createBlock(\"i\", _hoisted_2)) : createCommentVNode(\"v-if\", true),\n    createCommentVNode(\" content \"),\n    createVNode(_component_node_content),\n    createCommentVNode(\" postfix \"),\n    !_ctx.isLeaf ? (openBlock(), createBlock(Fragment, { key: 3 }, [\n      _ctx.node.loading ? (openBlock(), createBlock(\"i\", _hoisted_3)) : (openBlock(), createBlock(\"i\", _hoisted_4))\n    ], 2112)) : createCommentVNode(\"v-if\", true)\n  ], 42, [\"id\", \"aria-haspopup\", \"aria-owns\", \"aria-expanded\", \"tabindex\"]);\n}\n\nscript.render = render;\nscript.__file = \"packages/cascader-panel/src/node.vue\";\n\nvar script$1 = defineComponent({\n  name: \"ElCascaderMenu\",\n  components: {\n    ElScrollbar,\n    ElCascaderNode: script\n  },\n  props: {\n    nodes: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const instance = getCurrentInstance();\n    const { t } = useLocaleInject();\n    const id = generateId();\n    let activeNode = null;\n    let hoverTimer = null;\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const hoverZone = ref(null);\n    const isEmpty = computed(() => !props.nodes.length);\n    const menuId = computed(() => `cascader-menu-${id}-${props.index}`);\n    const handleExpand = (e) => {\n      activeNode = e.target;\n    };\n    const handleMouseMove = (e) => {\n      if (!panel.isHoverMenu || !activeNode || !hoverZone.value)\n        return;\n      if (activeNode.contains(e.target)) {\n        clearHoverTimer();\n        const el = instance.vnode.el;\n        const { left } = el.getBoundingClientRect();\n        const { offsetWidth, offsetHeight } = el;\n        const startX = e.clientX - left;\n        const top = activeNode.offsetTop;\n        const bottom = top + activeNode.offsetHeight;\n        hoverZone.value.innerHTML = `\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${top} L${offsetWidth} 0 V${top} Z\" />\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${bottom} L${offsetWidth} ${offsetHeight} V${bottom} Z\" />\n        `;\n      } else if (!hoverTimer) {\n        hoverTimer = window.setTimeout(clearHoverZone, panel.config.hoverThreshold);\n      }\n    };\n    const clearHoverTimer = () => {\n      if (!hoverTimer)\n        return;\n      clearTimeout(hoverTimer);\n      hoverTimer = null;\n    };\n    const clearHoverZone = () => {\n      if (!hoverZone.value)\n        return;\n      hoverZone.value.innerHTML = \"\";\n      clearHoverTimer();\n    };\n    return {\n      panel,\n      hoverZone,\n      isEmpty,\n      menuId,\n      t,\n      handleExpand,\n      handleMouseMove,\n      clearHoverZone\n    };\n  }\n});\n\nconst _hoisted_1$1 = {\n  key: 0,\n  class: \"el-cascader-menu__empty-text\"\n};\nconst _hoisted_2$1 = {\n  key: 1,\n  ref: \"hoverZone\",\n  class: \"el-cascader-menu__hover-zone\"\n};\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_node = resolveComponent(\"el-cascader-node\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  return openBlock(), createBlock(_component_el_scrollbar, {\n    id: _ctx.menuId,\n    tag: \"ul\",\n    role: \"menu\",\n    class: \"el-cascader-menu\",\n    \"wrap-class\": \"el-cascader-menu__wrap\",\n    \"view-class\": [\n      \"el-cascader-menu__list\",\n      _ctx.isEmpty && \"is-empty\"\n    ],\n    onMousemove: _ctx.handleMouseMove,\n    onMouseleave: _ctx.clearHoverZone\n  }, {\n    default: withCtx(() => [\n      (openBlock(true), createBlock(Fragment, null, renderList(_ctx.nodes, (node) => {\n        return openBlock(), createBlock(_component_el_cascader_node, {\n          key: node.uid,\n          node,\n          \"menu-id\": _ctx.menuId,\n          onExpand: _ctx.handleExpand\n        }, null, 8, [\"node\", \"menu-id\", \"onExpand\"]);\n      }), 128)),\n      _ctx.isEmpty ? (openBlock(), createBlock(\"div\", _hoisted_1$1, toDisplayString(_ctx.t(\"el.cascader.noData\")), 1)) : _ctx.panel.isHoverMenu ? (openBlock(), createBlock(\"svg\", _hoisted_2$1, null, 512)) : createCommentVNode(\"v-if\", true)\n    ]),\n    _: 1\n  }, 8, [\"id\", \"view-class\", \"onMousemove\", \"onMouseleave\"]);\n}\n\nscript$1.render = render$1;\nscript$1.__file = \"packages/cascader-panel/src/menu.vue\";\n\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\nconst isFunction = (val) => typeof val === 'function';\n\nlet uid = 0;\nconst calculatePathNodes = (node) => {\n  const nodes = [node];\n  let { parent } = node;\n  while (parent) {\n    nodes.unshift(parent);\n    parent = parent.parent;\n  }\n  return nodes;\n};\nclass Node {\n  constructor(data, config, parent, root = false) {\n    this.data = data;\n    this.config = config;\n    this.parent = parent;\n    this.root = root;\n    this.uid = uid++;\n    this.checked = false;\n    this.indeterminate = false;\n    this.loading = false;\n    const { value: valueKey, label: labelKey, children: childrenKey } = config;\n    const childrenData = data[childrenKey];\n    const pathNodes = calculatePathNodes(this);\n    this.level = root ? 0 : parent ? parent.level + 1 : 1;\n    this.value = data[valueKey];\n    this.label = data[labelKey];\n    this.pathNodes = pathNodes;\n    this.pathValues = pathNodes.map((node) => node.value);\n    this.pathLabels = pathNodes.map((node) => node.label);\n    this.childrenData = childrenData;\n    this.children = (childrenData || []).map((child) => new Node(child, config, this));\n    this.loaded = !config.lazy || this.isLeaf || !isEmpty(childrenData);\n  }\n  get isDisabled() {\n    const { data, parent, config } = this;\n    const { disabled, checkStrictly } = config;\n    const isDisabled = isFunction(disabled) ? disabled(data, this) : !!data[disabled];\n    return isDisabled || !checkStrictly && (parent == null ? void 0 : parent.isDisabled);\n  }\n  get isLeaf() {\n    const { data, config, childrenData, loaded } = this;\n    const { lazy, leaf } = config;\n    const isLeaf = isFunction(leaf) ? leaf(data, this) : data[leaf];\n    return isUndefined(isLeaf) ? lazy && !loaded ? false : !Array.isArray(childrenData) : !!isLeaf;\n  }\n  get valueByOption() {\n    return this.config.emitPath ? this.pathValues : this.value;\n  }\n  appendChild(childData) {\n    const { childrenData, children } = this;\n    const node = new Node(childData, this.config, this);\n    if (Array.isArray(childrenData)) {\n      childrenData.push(childData);\n    } else {\n      this.childrenData = [childData];\n    }\n    children.push(node);\n    return node;\n  }\n  calcText(allLevels, separator) {\n    const text = allLevels ? this.pathLabels.join(separator) : this.label;\n    this.text = text;\n    return text;\n  }\n  broadcast(event, ...args) {\n    const handlerName = `onParent${capitalize(event)}`;\n    this.children.forEach((child) => {\n      if (child) {\n        child.broadcast(event, ...args);\n        child[handlerName] && child[handlerName](...args);\n      }\n    });\n  }\n  emit(event, ...args) {\n    const { parent } = this;\n    const handlerName = `onChild${capitalize(event)}`;\n    if (parent) {\n      parent[handlerName] && parent[handlerName](...args);\n      parent.emit(event, ...args);\n    }\n  }\n  onParentCheck(checked) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked);\n    }\n  }\n  onChildCheck() {\n    const { children } = this;\n    const validChildren = children.filter((child) => !child.isDisabled);\n    const checked = validChildren.length ? validChildren.every((child) => child.checked) : false;\n    this.setCheckState(checked);\n  }\n  setCheckState(checked) {\n    const totalNum = this.children.length;\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;\n      return c + num;\n    }, 0);\n    this.checked = this.loaded && this.children.every((child) => child.loaded && child.checked) && checked;\n    this.indeterminate = this.loaded && checkedNum !== totalNum && checkedNum > 0;\n  }\n  doCheck(checked) {\n    if (this.checked === checked)\n      return;\n    const { checkStrictly, multiple } = this.config;\n    if (checkStrictly || !multiple) {\n      this.checked = checked;\n    } else {\n      this.broadcast(\"check\", checked);\n      this.setCheckState(checked);\n      this.emit(\"check\");\n    }\n  }\n}\n\nconst flatNodes = (nodes, leafOnly) => {\n  return nodes.reduce((res, node) => {\n    if (node.isLeaf) {\n      res.push(node);\n    } else {\n      !leafOnly && res.push(node);\n      res = res.concat(flatNodes(node.children, leafOnly));\n    }\n    return res;\n  }, []);\n};\nclass Store {\n  constructor(data, config) {\n    this.config = config;\n    const nodes = (data || []).map((nodeData) => new Node(nodeData, this.config));\n    this.nodes = nodes;\n    this.allNodes = flatNodes(nodes, false);\n    this.leafNodes = flatNodes(nodes, true);\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  getFlattedNodes(leafOnly) {\n    return leafOnly ? this.leafNodes : this.allNodes;\n  }\n  appendNode(nodeData, parentNode) {\n    const node = parentNode ? parentNode.appendChild(nodeData) : new Node(nodeData, this.config);\n    if (!parentNode)\n      this.nodes.push(node);\n    this.allNodes.push(node);\n    node.isLeaf && this.leafNodes.push(node);\n  }\n  appendNodes(nodeDataList, parentNode) {\n    nodeDataList.forEach((nodeData) => this.appendNode(nodeData, parentNode));\n  }\n  getNodeByValue(value, leafOnly = false) {\n    if (!value && value !== 0)\n      return null;\n    const nodes = this.getFlattedNodes(leafOnly).filter((node) => isEqual(node.value, value) || isEqual(node.pathValues, value));\n    return nodes[0] || null;\n  }\n  getSameNode(node) {\n    if (!node)\n      return null;\n    const nodes = this.getFlattedNodes(false).filter(({ value, level }) => isEqual(node.value, value) && node.level === level);\n    return nodes[0] || null;\n  }\n}\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nconst CommonProps = {\n  modelValue: [Number, String, Array],\n  options: {\n    type: Array,\n    default: () => []\n  },\n  props: {\n    type: Object,\n    default: () => ({})\n  }\n};\nconst DefaultProps = {\n  expandTrigger: ExpandTrigger.CLICK,\n  multiple: false,\n  checkStrictly: false,\n  emitPath: true,\n  lazy: false,\n  lazyLoad: NOOP,\n  value: \"value\",\n  label: \"label\",\n  children: \"children\",\n  leaf: \"leaf\",\n  disabled: \"disabled\",\n  hoverThreshold: 500\n};\nconst useCascaderConfig = (props) => {\n  return computed(() => __spreadValues(__spreadValues({}, DefaultProps), props.props));\n};\n\nconst isLeaf = (el) => !el.getAttribute(\"aria-owns\");\nconst getSibling = (el, distance) => {\n  const { parentNode } = el;\n  if (!parentNode)\n    return null;\n  const siblings = parentNode.querySelectorAll('.el-cascader-node[tabindex=\"-1\"]');\n  const index = Array.prototype.indexOf.call(siblings, el);\n  return siblings[index + distance] || null;\n};\nconst getMenuIndex = (el) => {\n  if (!el)\n    return 0;\n  const pieces = el.id.split(\"-\");\n  return Number(pieces[pieces.length - 2]);\n};\nconst focusNode = (el) => {\n  if (!el)\n    return;\n  el.focus();\n  !isLeaf(el) && el.click();\n};\nconst checkNode = (el) => {\n  if (!el)\n    return;\n  const input = el.querySelector(\"input\");\n  if (input) {\n    input.click();\n  } else if (isLeaf(el)) {\n    el.click();\n  }\n};\nconst sortByOriginalOrder = (oldNodes, newNodes) => {\n  const newNodesCopy = newNodes.slice(0);\n  const newIds = newNodesCopy.map((node) => node.uid);\n  const res = oldNodes.reduce((acc, item) => {\n    const index = newIds.indexOf(item.uid);\n    if (index > -1) {\n      acc.push(item);\n      newNodesCopy.splice(index, 1);\n      newIds.splice(index, 1);\n    }\n    return acc;\n  }, []);\n  res.push(...newNodesCopy);\n  return res;\n};\n\nvar __defProp$1 = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar script$2 = defineComponent({\n  name: \"ElCascaderPanel\",\n  components: {\n    ElCascaderMenu: script$1\n  },\n  props: __spreadProps(__spreadValues$1({}, CommonProps), {\n    border: {\n      type: Boolean,\n      default: true\n    },\n    renderLabel: Function\n  }),\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    \"close\",\n    \"expand-change\"\n  ],\n  setup(props, { emit, slots }) {\n    let initialLoaded = true;\n    let manualChecked = false;\n    const config = useCascaderConfig(props);\n    const store = ref(null);\n    const menuList = ref([]);\n    const checkedValue = ref(null);\n    const menus = ref([]);\n    const expandingNode = ref(null);\n    const checkedNodes = ref([]);\n    const isHoverMenu = computed(() => config.value.expandTrigger === ExpandTrigger.HOVER);\n    const renderLabelFn = computed(() => props.renderLabel || slots.default);\n    const initStore = () => {\n      const { options } = props;\n      const cfg = config.value;\n      manualChecked = false;\n      store.value = new Store(options, cfg);\n      menus.value = [store.value.getNodes()];\n      if (cfg.lazy && isEmpty(props.options)) {\n        initialLoaded = false;\n        lazyLoad(null, () => {\n          initialLoaded = true;\n          syncCheckedValue(false, true);\n        });\n      } else {\n        syncCheckedValue(false, true);\n      }\n    };\n    const lazyLoad = (node, cb) => {\n      const cfg = config.value;\n      node = node || new Node({}, cfg, null, true);\n      node.loading = true;\n      const resolve = (dataList) => {\n        const parent = node.root ? null : node;\n        dataList && store.value.appendNodes(dataList, parent);\n        node.loading = false;\n        node.loaded = true;\n        cb && cb(dataList);\n      };\n      cfg.lazyLoad(node, resolve);\n    };\n    const expandNode = (node, silent) => {\n      var _a;\n      const { level } = node;\n      const newMenus = menus.value.slice(0, level);\n      let newExpandingNode;\n      if (node.isLeaf) {\n        newExpandingNode = node.pathNodes[level - 2];\n      } else {\n        newExpandingNode = node;\n        newMenus.push(node.children);\n      }\n      if (((_a = expandingNode.value) == null ? void 0 : _a.uid) !== (newExpandingNode == null ? void 0 : newExpandingNode.uid)) {\n        expandingNode.value = node;\n        menus.value = newMenus;\n        !silent && emit(\"expand-change\", (node == null ? void 0 : node.pathValues) || []);\n      }\n    };\n    const handleCheckChange = (node, checked, emitClose = true) => {\n      const { checkStrictly, multiple } = config.value;\n      const oldNode = checkedNodes.value[0];\n      manualChecked = true;\n      !multiple && (oldNode == null ? void 0 : oldNode.doCheck(false));\n      node.doCheck(checked);\n      calculateCheckedValue();\n      emitClose && !multiple && !checkStrictly && emit(\"close\");\n    };\n    const getFlattedNodes = (leafOnly) => {\n      return store.value.getFlattedNodes(leafOnly);\n    };\n    const getCheckedNodes = (leafOnly) => {\n      return getFlattedNodes(leafOnly).filter((node) => node.checked !== false);\n    };\n    const clearCheckedNodes = () => {\n      checkedNodes.value.forEach((node) => node.doCheck(false));\n      calculateCheckedValue();\n    };\n    const calculateCheckedValue = () => {\n      var _a;\n      const { checkStrictly, multiple } = config.value;\n      const oldNodes = checkedNodes.value;\n      const newNodes = getCheckedNodes(!checkStrictly);\n      const nodes = sortByOriginalOrder(oldNodes, newNodes);\n      const values = nodes.map((node) => node.valueByOption);\n      checkedNodes.value = nodes;\n      checkedValue.value = multiple ? values : (_a = values[0]) != null ? _a : null;\n    };\n    const syncCheckedValue = (loaded = false, forced = false) => {\n      const { modelValue } = props;\n      const { lazy, multiple, checkStrictly } = config.value;\n      const leafOnly = !checkStrictly;\n      if (!initialLoaded || manualChecked || !forced && isEqual(modelValue, checkedValue.value))\n        return;\n      if (lazy && !loaded) {\n        const values = deduplicate(arrayFlat(coerceTruthyValueToArray(modelValue)));\n        const nodes = values.map((val) => store.value.getNodeByValue(val)).filter((node) => !!node && !node.loaded && !node.loading);\n        if (nodes.length) {\n          nodes.forEach((node) => {\n            lazyLoad(node, () => syncCheckedValue(false, forced));\n          });\n        } else {\n          syncCheckedValue(true, forced);\n        }\n      } else {\n        const values = multiple ? coerceTruthyValueToArray(modelValue) : [modelValue];\n        const nodes = deduplicate(values.map((val) => store.value.getNodeByValue(val, leafOnly)));\n        syncMenuState(nodes, false);\n        checkedValue.value = modelValue;\n      }\n    };\n    const syncMenuState = (newCheckedNodes, reserveExpandingState = true) => {\n      const { checkStrictly } = config.value;\n      const oldNodes = checkedNodes.value;\n      const newNodes = newCheckedNodes.filter((node) => !!node && (checkStrictly || node.isLeaf));\n      const oldExpandingNode = store.value.getSameNode(expandingNode.value);\n      const newExpandingNode = reserveExpandingState && oldExpandingNode || newNodes[0];\n      if (newExpandingNode) {\n        newExpandingNode.pathNodes.forEach((node) => expandNode(node, true));\n      } else {\n        expandingNode.value = null;\n      }\n      oldNodes.forEach((node) => node.doCheck(false));\n      newNodes.forEach((node) => node.doCheck(true));\n      checkedNodes.value = newNodes;\n      nextTick(scrollToExpandingNode);\n    };\n    const scrollToExpandingNode = () => {\n      if (isServer)\n        return;\n      menuList.value.forEach((menu) => {\n        const menuElement = menu == null ? void 0 : menu.$el;\n        if (menuElement) {\n          const container = menuElement.querySelector(\".el-scrollbar__wrap\");\n          const activeNode = menuElement.querySelector(\".el-cascader-node.is-active\") || menuElement.querySelector(\".el-cascader-node.in-active-path\");\n          scrollIntoView(container, activeNode);\n        }\n      });\n    };\n    const handleKeyDown = (e) => {\n      const target = e.target;\n      const { code } = e;\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          const distance = code === EVENT_CODE.up ? -1 : 1;\n          focusNode(getSibling(target, distance));\n          break;\n        case EVENT_CODE.left:\n          const preMenu = menuList.value[getMenuIndex(target) - 1];\n          const expandedNode = preMenu == null ? void 0 : preMenu.$el.querySelector('.el-cascader-node[aria-expanded=\"true\"]');\n          focusNode(expandedNode);\n          break;\n        case EVENT_CODE.right:\n          const nextMenu = menuList.value[getMenuIndex(target) + 1];\n          const firstNode = nextMenu == null ? void 0 : nextMenu.$el.querySelector('.el-cascader-node[tabindex=\"-1\"]');\n          focusNode(firstNode);\n          break;\n        case EVENT_CODE.enter:\n          checkNode(target);\n          break;\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          emit(\"close\");\n          break;\n      }\n    };\n    provide(CASCADER_PANEL_INJECTION_KEY, reactive({\n      config,\n      expandingNode,\n      checkedNodes,\n      isHoverMenu,\n      renderLabelFn,\n      lazyLoad,\n      expandNode,\n      handleCheckChange\n    }));\n    watch([config, () => props.options], initStore, { deep: true, immediate: true });\n    watch(() => props.modelValue, () => {\n      manualChecked = false;\n      syncCheckedValue();\n    });\n    watch(checkedValue, (val) => {\n      if (!isEqual(val, props.modelValue)) {\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n      }\n    });\n    onBeforeUpdate(() => menuList.value = []);\n    onMounted(() => !isEmpty(props.modelValue) && syncCheckedValue());\n    return {\n      menuList,\n      menus,\n      checkedNodes,\n      handleKeyDown,\n      handleCheckChange,\n      getFlattedNodes,\n      getCheckedNodes,\n      clearCheckedNodes,\n      calculateCheckedValue,\n      scrollToExpandingNode\n    };\n  }\n});\n\nfunction render$2(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_menu = resolveComponent(\"el-cascader-menu\");\n  return openBlock(), createBlock(\"div\", {\n    class: [\n      \"el-cascader-panel\",\n      _ctx.border && \"is-bordered\"\n    ],\n    onKeydown: _cache[1] || (_cache[1] = (...args) => _ctx.handleKeyDown && _ctx.handleKeyDown(...args))\n  }, [\n    (openBlock(true), createBlock(Fragment, null, renderList(_ctx.menus, (menu, index) => {\n      return openBlock(), createBlock(_component_el_cascader_menu, {\n        key: index,\n        ref: (item) => _ctx.menuList[index] = item,\n        index,\n        nodes: menu\n      }, null, 8, [\"index\", \"nodes\"]);\n    }), 128))\n  ], 34);\n}\n\nscript$2.render = render$2;\nscript$2.__file = \"packages/cascader-panel/src/index.vue\";\n\nscript$2.install = (app) => {\n  app.component(script$2.name, script$2);\n};\nconst _CascaderPanel = script$2;\n\nexport default _CascaderPanel;\nexport { CASCADER_PANEL_INJECTION_KEY, CommonProps, DefaultProps, ExpandTrigger, useCascaderConfig };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}