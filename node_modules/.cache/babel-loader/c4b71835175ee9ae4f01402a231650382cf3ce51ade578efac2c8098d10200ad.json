{"ast":null,"code":"import Vue from 'vue';\nimport { extend, ValidationProvider, ValidationObserver } from 'vee-validate';\nimport * as rules from 'vee-validate/dist/rules';\nimport { messages } from 'vee-validate/dist/locale/es.json';\nObject.keys(rules).forEach(rule => {\n  extend(rule, {\n    ...rules[rule],\n    // copies rule configuration\n    message: messages[rule] // assign message\n  });\n});\n\nVue.component('ValidationProvider', ValidationProvider);\nVue.component('ValidationObserver', ValidationObserver);\nextend('https', {\n  validate: value => {\n    const regexp = new RegExp(/^(https:\\/\\/)([\\da-z.-]+\\.[a-z.]{2,6}|[\\d.]+)([/:?=&#]{1}[\\da-z.-]+)*[/?]?$/, 'i');\n    return regexp.test(value);\n  },\n  message: 'The {_field_} field must be a valid URL secure'\n});\nextend('http', {\n  validate: value => {\n    const regexp = new RegExp(/^(https?:\\/\\/)?([\\da-z.-]+\\.[a-z.]{2,6}|[\\d.]+)([/:?=&#]{1}[\\da-z.-]+)*[/?]?$/, 'i');\n    return regexp.test(value);\n  },\n  message: 'The {_field_} field must be a valid URL'\n});\n\n// extend('required', {\n//   ...required,\n//   message: 'This field is required'\n// })\n\n// extend('email', {\n//   ...email,\n//   message: 'This field must be a valid email'\n// })\n\n// extend('confirmed', {\n//   ...confirmed,\n//   message: 'This field confirmation does not match'\n// })\n\n// extend('length', {\n//   ...length,\n//   message: 'This field must have 2 options'\n// })","map":{"version":3,"names":["Vue","extend","ValidationProvider","ValidationObserver","rules","messages","Object","keys","forEach","rule","message","component","validate","value","regexp","RegExp","test"],"sources":["/home/jisra/Documents/escom/web/tecweb_vue_frontend/src/plugins/vee-validate.js"],"sourcesContent":["import Vue from 'vue'\nimport { extend, ValidationProvider, ValidationObserver } from 'vee-validate'\nimport * as rules from 'vee-validate/dist/rules'\nimport { messages } from 'vee-validate/dist/locale/es.json'\n\n\nObject.keys(rules).forEach(rule => {\n  extend(rule, {\n    ...rules[rule], // copies rule configuration\n    message: messages[rule] // assign message\n  })\n})\nVue.component('ValidationProvider', ValidationProvider)\nVue.component('ValidationObserver', ValidationObserver)\n\n\n\nextend('https', {\n  validate: value => {\n    const regexp = new RegExp(/^(https:\\/\\/)([\\da-z.-]+\\.[a-z.]{2,6}|[\\d.]+)([/:?=&#]{1}[\\da-z.-]+)*[/?]?$/, 'i')\n\n    return regexp.test(value)\n  },\n  message: 'The {_field_} field must be a valid URL secure'\n})\n\nextend('http', {\n  validate: value => {\n    const regexp = new RegExp(/^(https?:\\/\\/)?([\\da-z.-]+\\.[a-z.]{2,6}|[\\d.]+)([/:?=&#]{1}[\\da-z.-]+)*[/?]?$/, 'i')\n\n    return regexp.test(value)\n  },\n  message: 'The {_field_} field must be a valid URL'\n})\n\n// extend('required', {\n//   ...required,\n//   message: 'This field is required'\n// })\n\n// extend('email', {\n//   ...email,\n//   message: 'This field must be a valid email'\n// })\n\n// extend('confirmed', {\n//   ...confirmed,\n//   message: 'This field confirmation does not match'\n// })\n\n// extend('length', {\n//   ...length,\n//   message: 'This field must have 2 options'\n// })\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,SAASC,MAAM,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,cAAc;AAC7E,OAAO,KAAKC,KAAK,MAAM,yBAAyB;AAChD,SAASC,QAAQ,QAAQ,kCAAkC;AAG3DC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAACC,IAAI,IAAI;EACjCR,MAAM,CAACQ,IAAI,EAAE;IACX,GAAGL,KAAK,CAACK,IAAI,CAAC;IAAE;IAChBC,OAAO,EAAEL,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC;AACJ,CAAC,CAAC;;AACFT,GAAG,CAACW,SAAS,CAAC,oBAAoB,EAAET,kBAAkB,CAAC;AACvDF,GAAG,CAACW,SAAS,CAAC,oBAAoB,EAAER,kBAAkB,CAAC;AAIvDF,MAAM,CAAC,OAAO,EAAE;EACdW,QAAQ,EAAEC,KAAK,IAAI;IACjB,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC,6EAA6E,EAAE,GAAG,CAAC;IAE7G,OAAOD,MAAM,CAACE,IAAI,CAACH,KAAK,CAAC;EAC3B,CAAC;EACDH,OAAO,EAAE;AACX,CAAC,CAAC;AAEFT,MAAM,CAAC,MAAM,EAAE;EACbW,QAAQ,EAAEC,KAAK,IAAI;IACjB,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC,+EAA+E,EAAE,GAAG,CAAC;IAE/G,OAAOD,MAAM,CAACE,IAAI,CAACH,KAAK,CAAC;EAC3B,CAAC;EACDH,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}